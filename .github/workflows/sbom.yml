name: SBOM Generation

on:
  push:
    tags:
      - 'browser-v*.*.*'
  workflow_dispatch:

jobs:
  sbom:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      id-token: write
      actions: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate SBOM (CycloneDX)
        uses: anchore/sbom-action@v0
        with:
          path: ./
          format: cyclonedx-json
          output-file: aura-sbom.cdx.json

      - name: Generate SBOM (SPDX)
        uses: anchore/sbom-action@v0
        with:
          path: ./
          format: spdx-json
          output-file: aura-sbom.spdx.json

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Attest SBOM (keyless OIDC)
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          TAG="${GITHUB_REF_NAME}"
          REPO_URL="git+${{ github.server_url }}/${{ github.repository }}@${TAG}"
          cosign attest --predicate aura-sbom.cdx.json --type cyclonedx --yes "${REPO_URL}"
          cosign attest --predicate aura-sbom.spdx.json --type spdx --yes "${REPO_URL}"

      - name: Upload SBOMs
        uses: actions/upload-artifact@v4
        with:
          name: aura-sbom
          path: |
            aura-sbom.cdx.json
            aura-sbom.spdx.json

      - name: Attach SBOMs to release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ github.ref_name }}" aura-sbom.cdx.json aura-sbom.spdx.json --repo "${{ github.repository }}" --clobber