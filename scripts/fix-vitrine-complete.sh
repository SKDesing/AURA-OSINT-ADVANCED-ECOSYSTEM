#!/bin/bash
# üîß Fix complet de la vitrine AURA OSINT

PROJECT_ROOT="/home/soufiane/TikTok-Live-Analyser"
VITRINE_PATH="$PROJECT_ROOT/marketing/sites/vitrine-aura-advanced-osint-ecosystem"

cd "$VITRINE_PATH"

echo "üîß CORRECTION COMPL√àTE VITRINE AURA"
echo "===================================="
echo ""

# 1. Nettoyer node_modules et package-lock
echo "1Ô∏è‚É£  Nettoyage d√©pendances..."
rm -rf node_modules package-lock.json

# 2. Installer toutes les d√©pendances manquantes
echo "2Ô∏è‚É£  Installation d√©pendances compl√®tes..."
npm install \
  lucide-react \
  styled-components \
  @babel/runtime \
  @babel/core \
  @babel/preset-env \
  @babel/preset-react

# 3. Corriger les chemins absolus dans les fichiers
echo "3Ô∏è‚É£  Correction chemins absolus..."
find src -type f \( -name "*.js" -o -name "*.jsx" \) -exec sed -i 's|/home/soufiane/AURA-OSINT-ADVANCED-ECOSYSTEM|/home/soufiane/TikTok-Live-Analyser|g' {} \;

# 4. Test build
echo "4Ô∏è‚É£  Test build..."
if npm run build; then
    echo "‚úÖ Build r√©ussi!"
    BUILD_SIZE=$(du -sh build 2>/dev/null | awk '{print $1}')
    echo "üì¶ Taille build: $BUILD_SIZE"
else
    echo "‚ùå Build √©chou√© - diagnostic..."
    
    # Diagnostic approfondi
    echo ""
    echo "üîç DIAGNOSTIC:"
    echo "- V√©rification React:"
    npm list react react-dom react-scripts
    
    echo ""
    echo "- Fichiers probl√©matiques:"
    find src -name "*.js" -o -name "*.jsx" | head -5
    
    echo ""
    echo "- Imports probl√©matiques:"
    grep -r "from.*AURA-OSINT" src/ || echo "Aucun trouv√©"
fi

echo ""
echo "‚úÖ Correction termin√©e"