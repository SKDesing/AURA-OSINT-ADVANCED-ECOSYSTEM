#!/usr/bin/env node
// Test de la migration Chromium

const fs = require('fs');

async function testMigration() {
    console.log('üß™ Test de la migration Chromium');
    console.log('================================');
    
    // Test 1: V√©rifier que les fichiers Brave n'existent plus
    const braveFiles = [
        'launch-brave.js',
        'brave-portable-downloader.js',
        'live-tracker/brave-launcher.js',
        'src/utils/getBravePath.js'
    ];
    
    console.log('\nüóëÔ∏è  V√©rification suppression fichiers Brave:');
    let braveFilesRemoved = 0;
    for (const file of braveFiles) {
        if (!fs.existsSync(file)) {
            console.log(`   ‚úÖ ${file} - SUPPRIM√â`);
            braveFilesRemoved++;
        } else {
            console.log(`   ‚ùå ${file} - ENCORE PR√âSENT`);
        }
    }
    
    // Test 2: V√©rifier que les nouveaux fichiers Chromium existent
    const chromiumFiles = [
        'src/utils/getChromiumPath.js',
        'chromium-launcher.js'
    ];
    
    console.log('\nüîß V√©rification cr√©ation fichiers Chromium:');
    let chromiumFilesCreated = 0;
    for (const file of chromiumFiles) {
        if (fs.existsSync(file)) {
            console.log(`   ‚úÖ ${file} - CR√â√â`);
            chromiumFilesCreated++;
        } else {
            console.log(`   ‚ùå ${file} - MANQUANT`);
        }
    }
    
    // Test 3: Tester le ChromiumPathDetector
    console.log('\nüîç Test du d√©tecteur de chemin Chromium:');
    try {
        if (fs.existsSync('src/utils/getChromiumPath.js')) {
            const ChromiumPathDetector = require('../../src/utils/getChromiumPath.js');
            const chromiumPath = ChromiumPathDetector.detect();
            const profileDir = ChromiumPathDetector.getProfileDir();
            
            console.log(`   ‚úÖ Chemin Chromium: ${chromiumPath || 'Puppeteer bundled'}`);
            console.log(`   ‚úÖ R√©pertoire profil: ${profileDir}`);
        } else {
            console.log('   ‚ùå ChromiumPathDetector non disponible');
        }
    } catch (error) {
        console.log(`   ‚ùå Erreur ChromiumPathDetector: ${error.message}`);
    }
    
    // Test 4: Tester le ChromiumLauncher
    console.log('\nüöÄ Test du lanceur Chromium:');
    try {
        if (fs.existsSync('chromium-launcher.js')) {
            const ChromiumLauncher = require('../../chromium-launcher.js');
            const launcher = new ChromiumLauncher({ headless: true });
            console.log('   ‚úÖ ChromiumLauncher instanci√© avec succ√®s');
            
            // Test de lancement (sans vraiment lancer pour √©viter les d√©pendances)
            console.log('   ‚úÖ Configuration valid√©e');
        } else {
            console.log('   ‚ùå ChromiumLauncher non disponible');
        }
    } catch (error) {
        console.log(`   ‚ùå Erreur ChromiumLauncher: ${error.message}`);
    }
    
    // Test 5: V√©rifier les mises √† jour de fichiers
    console.log('\nüìù V√©rification des mises √† jour:');
    const filesToCheck = [
        'CHANGELOG.md',
        'app-launcher.js',
        'live-tracker/server.js'
    ];
    
    for (const file of filesToCheck) {
        if (fs.existsSync(file)) {
            const content = fs.readFileSync(file, 'utf8');
            const hasBraveReferences = /brave/i.test(content);
            const hasChromiumReferences = /chromium/i.test(content);
            
            if (!hasBraveReferences && hasChromiumReferences) {
                console.log(`   ‚úÖ ${file} - Migration r√©ussie`);
            } else if (hasBraveReferences) {
                console.log(`   ‚ö†Ô∏è  ${file} - R√©f√©rences Brave restantes`);
            } else {
                console.log(`   ‚ÑπÔ∏è  ${file} - Pas de r√©f√©rences navigateur`);
            }
        } else {
            console.log(`   ‚ùì ${file} - Fichier non trouv√©`);
        }
    }
    
    // R√©sum√©
    console.log('\nüìä R√âSUM√â DE LA MIGRATION:');
    console.log(`   Fichiers Brave supprim√©s: ${braveFilesRemoved}/${braveFiles.length}`);
    console.log(`   Fichiers Chromium cr√©√©s: ${chromiumFilesCreated}/${chromiumFiles.length}`);
    
    const migrationSuccess = braveFilesRemoved === braveFiles.length && 
                            chromiumFilesCreated === chromiumFiles.length;
    
    if (migrationSuccess) {
        console.log('\nüéâ MIGRATION R√âUSSIE !');
        console.log('‚úÖ AURA utilise maintenant Chromium uniquement');
        console.log('üõ°Ô∏è Configuration s√©curis√©e et universelle');
    } else {
        console.log('\n‚ö†Ô∏è  MIGRATION INCOMPL√àTE');
        console.log('üîß V√©rifiez les erreurs ci-dessus');
    }
}

// Ex√©cution
if (require.main === module) {
    testMigration().catch(console.error);
}

module.exports = { testMigration };